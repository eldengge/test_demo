<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.nsm.consumetest" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <context:property-placeholder location="classpath:mq.properties"/>
    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" virtual-host="${mq.virtual-host}"/>
    <rabbit:admin connection-factory="connectionFactory"/>
    <!-- queue 队列声明 -->
    <!--
        durable 是否持久化
        exclusive 仅创建者可以使用的私有队列，断开后自动删除
        auto-delete 当所有消费端连接断开后，是否自动删除队列
    -->
    <rabbit:queue id="testqueue" name="${mq.queue}_queue1" auto-declare="true"/>
    <rabbit:queue id="testqueue2" name="${mq.queue}_queue2" auto-declare="true"/>

    <!-- 交换机定义 -->
    <!--
        交换机：一个交换机可以绑定多个队列，一个队列也可以绑定到多个交换机上。
        如果没有队列绑定到交换机上，则发送到该交换机上的信息则会丢失。

        direct模式:消息与一个特定的路由器完全匹配，才会转发
        topic模式:按模式匹配
     -->
    <rabbit:direct-exchange name="directExchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="testqueue" key="key111"/>
            <rabbit:binding queue="testqueue2" key="key222"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- 配置监听 -->
    <!--
        concurrency设置的是对每个listener在初始化的时候设置的并发消费者的个数，
        prefetch是每次从一次性从broker里面取的待消费的消息的个数
        acknowledge="manual"为手动确认消息
    -->
    <!-- prefetch="1" 相当于channel.basicQos(1) 同一时刻消费者只处理一条消息 mq收到消费者应答后才会发送下一条消息-->
    <rabbit:listener-container connection-factory="connectionFactory" concurrency="1" acknowledge="manual" prefetch="1">
        <!--
           queues 监听队列，多个用逗号分隔
           ref 监听器
        -->
        <!--<rabbit:listener ref="testConsumeService" queues="testqueue"/>-->
        <rabbit:listener ref="testConsumerService2" queues="testqueue2" method="getMassage"/>
    </rabbit:listener-container>
</beans>